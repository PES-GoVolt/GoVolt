openapi: 3.0.0
info:
  title: Charging Points API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api
paths:
  /chargers/all/:
    get:
      tags:
      - Charge Stations
      summary: Get all charging points
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChargerLocation'
  /chargers/nearest/:
    post:
      tags:
      - Charge Stations
      summary: Get nearest charger
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                longitud:
                  type: number
                  format: float
                latitud:
                  type: number
                  format: float
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargerFullData'
        '400':
          description: Missing 'longitud' or 'latitud' in request body
  /chargers/{id}/:
    get:
      tags:
      - Charge Stations
      summary: Get charger by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargerFullData'
        '404':
          description: Charger not found
  /bikestations/all:
    get:
      tags:
      - Bike Stations
      summary: Get all bike stations
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BikestationLocation'
  /bikestations/database:
    post:
      tags:
      - Bike Stations
      summary: Update bike stations database
      responses:
        '201':
          description: Bike stations database updated
  /users/login/:
    post:
      tags:
      - Authentication
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful Authentication
        '400':
          description: Invalid email or password
  /users/logout/:
    post:
      tags:
      - Authentication
      summary: User logout
      responses:
        '200':
          description: Successful logout
        '401':
          description: Unauthorized
  /users/register/:
    post:
      tags:
      - Authentication
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
      responses:
        '200':
          description: Successful Registration
        '400':
          description: Invalid registration data
  /users/see-my-profile/:
    get:
      tags:
      - User Profile
      summary: Get user profile
      responses:
        '200':
          description: Successful profile retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
  /users/edit-my-profile/:
    post:
      tags:
      - User Profile
      summary: Edit user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                phone:
                  type: string
                photo_url:
                  type: string
      responses:
        '200':
          description: Successful Edit
        '400':
          description: Invalid profile data
  /rutas/:
    get:
      tags:
      - Rutas
      summary: Get all routes
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RutaViaje'
  /rutas/create/:
    post:
      tags:
      - Rutas
      summary: Create a new route
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RutaViaje'
      responses:
        '200':
          description: Successful response
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /rutas/my/:
    get:
      tags:
      - Rutas
      summary: Get routes created by the user
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RutaViaje'
  /rutas/participant_route/:
    get:
      tags:
      - Rutas
      summary: Get routes in which the user is a participant
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RutaViaje'
  /rutas/{id}/:
    get:
      tags:
      - Rutas
      summary: Get route by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RutaViaje'
        '404':
          description: Route not found
  /rutas/edit/{id}/:
    post:
      tags:
      - Rutas
      summary: Edit route information
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RutaViaje'
      responses:
        '200':
          description: Successful Edit
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /rutas/add_participant/{ruta_id}/{participant_id}/:
    post:
      tags:
      - Rutas
      summary: Add participant to route
      parameters:
        - name: ruta_id
          in: path
          required: true
          schema:
            type: string
        - name: participant_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
  /rutas/remove_participant/{ruta_id}/{participant_id}/:
    post:
      tags:
      - Rutas
      summary: Remove participant from route
      parameters:
        - name: ruta_id
          in: path
          required: true
          schema:
            type: string
        - name: participant_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
components:
  schemas:
    BikestationLocation:
      type: object
      properties:
        station_id:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
    ChargerLocation:
      type: object
      properties:
        charger_id:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
    ChargerFullData:
      type: object
      properties:
        charger_id:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        ac_dc:
          type: string
        acces:
          type: string
        address:
          type: string
        province_code:
          type: string
        mun:
          type: string
        charger_speed:
          type: string
        conection_type:
          type: string
    User:
      type: object
      properties:
        firebase_uid:
          type: integer
          format: int64
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
        photo_url:
          type: string
      required:
        - id
        - first_name
        - last_name
        - email
    RutaViaje:
      type: object
      properties:
        ubicacion_inicial:
          type: string
        ubicacion_final:
          type: string
        precio:
          type: number
          format: float
        num_plazas:
          type: integer
        fecha:
          type: string
        creador:
          type: string
        participantes:
          type: array
          items:
            type: string
      required:
        - ubicacion_inicial
        - ubicacion_final
        - precio
        - num_plazas
        - fecha
        - creador
